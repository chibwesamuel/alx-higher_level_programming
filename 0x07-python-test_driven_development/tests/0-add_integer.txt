# 0-add_integer.txt

---------------------------
How to use 0-add_integer.py
---------------------------

This module defines an integer addition function "add_integer(a, b=98)"

Usage
-----------
""add_integer(...)""" returns an integer: the addition of a and b,
for numbers and the value is equivalent to the "+" operator

::
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(2, 3)
	5
::
	>>> add_integer(2, -3)
	-1
The function also works with floating point numbers

::
	>>> add_integer(2,0, 3.0)
	5
note that floats are changed to int before addition is performed on them

::
	>>> add_integer(2.9, 0.2)
	3
::

	>>> add_integer(-2.9, -0.2)
	-3
Floating and non-floating point numbers can be combined

:: 
	>>> add_integer(2.3, -3)
	-1

The second argument is optional. By default, it is 98

::
	>>> add_integer(2)
	100

Non-numbers
----------
``add_integer()`` function expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a Type Error is raised:

::

	>>> add_integer("hello", 3)
	Traceback (most recent call last)
	TypeError: a must be  an integer

::

	>>> add_integer(2, "hello")
	Traceback (most recent call last)
	TypeError: b must be an integer

::

	>>> add_integer(none)
	Traceback (most recent call lat)
	TypeError: a must be an integer

::

	>>> add_integer(2.3, none)
	Traceback (most recent call last)
	TypeError: b must be an integer

If both arguments are non-integers and non-floats,  a TypeError message is
only printed for the first argument

::

	>>> add_integer("hello", "there")
	Traceback (most recent call last)
	TypeError: a must be an integer

The function will fail if infinity is provided:

::

	>>> add_integer(float('inf'))
	Traceback (most recent call last)
	OverflowError: cannot convert float infinity to integer

::

	>>> add_integer(2, float('inf'))
	Traceback (most recent call last)
	OverflowError: cannot convert float infinity to integer

And again with NaN numbers

::
	>>> add_integer(float('nan'))
	Traceback (most recent call last)
	ValueError: cannot convert float NaN to integer

::
	>>> add_integer(2, float('nan'))
	Traceback (most recent call last)
	ValueError: cannot convert float NaN to integer
	
